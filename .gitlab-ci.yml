# Use our own docker image, that was generated and pushed with the following commands:
#   docker login registry.gitlab.inria.fr
#   docker build -t registry.gitlab.inria.fr/quinson/mbi2 .
#   docker push registry.gitlab.inria.fr/quinson/mbi2
#image: registry.gitlab.com/mwapl/benchmarking-mpi:latest
image: registry.gitlab.inria.fr/quinson/mbi2:latest

variables:
    GIT_SUBMODULE_STRATEGY: none

stages:
    - build
    - test
    - svg
    - gather

build-must:
    stage: build
    needs: []
    script:
        - scripts/MUST-build
    artifacts:
        untracked: false
        expire_in: 30 days
        paths:
            - builds/MUST

test-must-25:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-50:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +26 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-75:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +51 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-100:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +76 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-125:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +101 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-150:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +126 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-175:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +151 | head -25)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

test-must-200:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - scripts/MUST-run $(ls *.c | tail -n +176)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

build-aislinn:
    stage: build
    needs: []
    image: ubuntu:18.04
    before_script:
        - apt-get update
        - apt-get install -y gcc python2.7 python3.8 python-jinja2 autotools-dev automake build-essential git
    script:
        - ./scripts/Aislinn-build
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - tools/aislinn-git/*

test-aislinn:
    stage: test
    image: ubuntu:18.04
    needs:
        - job: build-aislinn
          artifacts: true
    before_script:
        - apt-get update
        - apt-get install -y gcc python2.7 python3.8 python-jinja2 autotools-dev automake build-essential
    script:
        - ./scripts/Aislinn-run
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

# MPI-SV is already built on its image file
#build-mpisv:
#    stage: build
#    needs: []
#    image: mpisv/mpi-sv
#    script:
#        - ./scripts/mpisv-build
#    artifacts:
#        untracked: false
#        expire_in: 30 days
#        when: always
#        paths:
#            - tools/mpisv

# MPI-SV refuses to build on nested virtualization as we have when using docker on gitlab-CI
#test-mpisv:
#    stage: test
#    image: mpisv/mpi-sv
#    needs: []
##        - job: build-mpisv
##          artifacts: true
#    script:
#        - ./scripts/mpisv-run
#    artifacts:
#        untracked: false
#        expire_in: 30 days
#        when: always
#        paths:
#            - logs

build-civl:
    stage: build
    needs: []
    script:
        - ./scripts/CIVL-build
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - tools/CIVL*

test-civl100:
    stage: test
    needs:
        - job: build-civl
          artifacts: false
    script:
        - ./scripts/CIVL-run $(ls *.c | head -100)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs
test-civl200:
    stage: test
    needs:
        - job: build-civl
          artifacts: false
    script:
        - ./scripts/CIVL-run $(ls *.c | tail -n +101)
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

build-parcoach:
    stage: build
    needs: []
    # before_script:
    #     - apt-get update
    #     - apt-get install -y git
    script:
        - ./scripts/Parcoach-build
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - builds/parcoach/*

test-parcoach:
    stage: test
    needs:
        - job: build-parcoach
          artifacts: true
    script:
        - ./scripts/Parcoach-run
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

build-simgrid:
    stage: build
    needs: []
    script:
        - ./scripts/SimGrid-build
    cache:
        paths:
            - SimGrid/*
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - builds/SimGrid

test-simgrid:
    stage: test
    needs:
        - job: build-simgrid
          artifacts: true
    script:
        - ./scripts/SimGrid-run
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

build-isp:
    stage: build
    needs: []
    before_script:
        - apt-get update
        - apt-get install -y quilt
    script:
        - sh -x ./scripts/ISP-build
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - ./builds/ISP

test-isp:
    stage: test
    needs:
        - job: build-isp
          artifacts: true
    script:
        - sh -x ./scripts/ISP-run
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

simgrid-svg:
    stage: svg
    needs:
        - job: test-simgrid
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - python3.8 gen_svg.py -i ../logs/simgrid/bench_simgrid.csv -o simgrid_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

parcoach-svg:
    stage: svg
    needs:
        - job: test-parcoach
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - python3.8 gen_svg.py -i ../logs/parcoach/bench_parcoach.csv -o parcoach_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

isp-svg:
    stage: svg
    needs:
        - job: test-isp
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - python3.8 gen_svg.py -i ../logs/isp/bench_isp.csv -o isp_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

aislinn-svg:
    stage: svg
    needs:
        - job: test-aislinn
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - python3.8 gen_svg.py -i ../logs/aislinn/bench_aislinn.csv -o aislinn_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

civl-svg:
    stage: svg
    needs:
        - job: test-civl100
          artifacts: true
        - job: test-civl200
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - cat ../logs/civl/*.csv > result.csv
        - python3.8 gen_svg.py -i result.csv -o civl_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

must-svg:
    stage: svg
    needs:
        - job: test-must-25
          artifacts: true
        - job: test-must-50
          artifacts: true
        - job: test-must-75
          artifacts: true
        - job: test-must-100
          artifacts: true
        - job: test-must-125
          artifacts: true
        - job: test-must-150
          artifacts: true
        - job: test-must-175
          artifacts: true
        - job: test-must-200
          artifacts: true
    # before_script:
    #   - apt-get update
    #   - apt-get install -y python3-pip libcairo2
    #   - pip3 install drawSvg
    script:
        - cd Data
        - cat ../logs/must/*.csv > result.csv
        - python3.8 gen_svg.py -i result.csv -o must_result_LOG --header false --mode log
        - cp *svg ../logs/
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs/*

data-collect:
    stage: gather
    needs:
        - job: test-must-25
          artifacts: true
        - job: test-must-50
          artifacts: true
        - job: test-must-75
          artifacts: true
        - job: test-must-100
          artifacts: true
        - job: test-must-125
          artifacts: true
        - job: test-must-150
          artifacts: true
        - job: test-must-175
          artifacts: true
        - job: test-must-200
          artifacts: true
        - job: test-civl100
          artifacts: true
        - job: test-civl200
          artifacts: true
        - job: test-parcoach
          artifacts: true
        - job: test-simgrid
          artifacts: true
        - job: test-isp
          artifacts: true
        - job: test-aislinn
          artifacts: true
        - job: must-svg
          artifacts: true
        - job: civl-svg
          artifacts: true
        - job: parcoach-svg
          artifacts: true
        - job: simgrid-svg
          artifacts: true
        - job: isp-svg
          artifacts: true
        - job: aislinn-svg
          artifacts: true
    # before_script:
    #     - apt-get update
    #     - apt-get install -y python3-pip libcairo2
    #     - pip3 install drawSvg
    script:
        - echo "#filename;id;tool;TO;NP;buff;expected;result;elapsed_time;jobid" > result.csv
        - cd Data
        - cat ../logs/*/*.csv >> result.csv
        - python3.8 gen_svg.py -i result.csv -o all_result_LOG --header true --mode log
        - cp *svg ../log
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - logs

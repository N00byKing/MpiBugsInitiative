image: registry.gitlab.com/mwapl/benchmarking-mpi:latest

variables:
    GIT_SUBMODULE_STRATEGY: none

stages: 
    - build
    - test
    - svg
    - gather

build-must:
    stage: build
    needs: []
    script:
        - cd Must/MUST-v1.6
        - mkdir -p BUILD
        - cd BUILD
        - cmake --version
        - CC=$(which gcc) CXX=$(which gcc++) FC=$(which gfortran) cmake ../ -DCMAKE_INSTALL_PREFIX=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6 -DCMAKE_BUILD_TYPE=Release
        - make -j$(nproc) install VERBOSE=1
    artifacts:
        untracked: false
        expire_in: 30 days
        paths:
            - Must/MUST-v1.6/*
            
test-must-25:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | head -25); do python3.8 runner.py -x must -o bench_must25.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html

test-must-50:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +26 | head -25); do python3.8 runner.py -x must -o bench_must50.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
test-must-75:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +51 | head -25); do python3.8 runner.py -x must -o bench_must75.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
test-must-100:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +76 | head -25); do python3.8 runner.py -x must -o bench_must100.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
test-must-125:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +101 | head -25); do python3.8 runner.py -x must -o bench_must125.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
test-must-150:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +126 | head -25); do python3.8 runner.py -x must -o bench_must150.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true;done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
test-must-175:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +151); do python3.8 runner.py -x must -o bench_must175.csv -t 300 --job $CI_JOB_ID $file; uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html
            
# There is only 174 tests so far
#test-must-200:
#    stage: test
#    needs:
#        - job: build-must
#          artifacts: true
#    before_script:
#        - apt-get install -y psmisc
#    script:
#        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
#        - cd Benchmarks
#        - for file in $(ls microbenchs/*.c | tail -n +175 | head -25); do python3.8 runner.py -x must -o bench_must200.csv -t 300 --job $CI_JOB_ID $file;uptime;killall mpirun||true; done
#    artifacts:
#        untracked: false
#        expire_in: 30 days
#        when: always
#        paths:
#            - Benchmarks/*.csv
#            - Benchmarks/*.txt
#            - Benchmarks/*.html
            
test-must-medium:
    stage: test
    needs:
        - job: build-must
          artifacts: true
    script:
        - export PATH=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Must/MUST-v1.6/bin:$PATH
        - cd Benchmarks
        - for file in $(ls mediumbenchs/*.c); do python3.8 runner.py -x must -o bench_must_med.csv -t 600 $file;uptime;killall mpirun||true; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html

build-aislinn:
    stage: build
    needs: []
    image: ubuntu:18.04
    before_script:
        - apt-get update
        - apt-get install -y gcc python2.7 python3.8 python-jinja2 autotools-dev automake build-essential git
    script:
        - if [ -e Aislinn/aislinn-git/.git ] ; then (cd Aislinn/aislinn-git ; git pull); else rm -rf Aislinn/aislinn-git; git clone --depth=1 https://github.com/spirali/aislinn.git Aislinn/aislinn-git; fi
        - cp -r ./Aislinn/aislinn-valgrind-312 ./Aislinn/aislinn-git/valgrind  
        - cd Aislinn/aislinn-git/valgrind
        - sh autogen.sh
        - ./configure
        - make -j$(nproc)
        - cd ../
        - ./waf configure
        - ./waf
    cache:
        paths:
            - Aislinn/aislinn-git/*
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Aislinn/aislinn-git/*

test-aislinn:
    stage: test
    image: ubuntu:18.04
    needs:
        - job: build-aislinn
          artifacts: true 
    before_script:
        - apt-get update
        - apt-get install -y gcc python2.7 python3.8 python-jinja2 autotools-dev automake build-essential
    script:
        - export PATH=$PATH:/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Aislinn/aislinn-git/bin/
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/microbenchs/*.c); do python3.8 runner.py -x aislinn -o bench_aislinn.csv -t 300 --job $CI_JOB_ID $file; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - ./Benchmarks/bench_aislinn.csv
            - Benchmarks/*.txt
            - Benchmarks/*.html

build-civl:
    stage: build
    needs: []
    script:
        - cd CIVL/CIVL-1.20_5259/lib
        - java -jar civl-1.20_5259.jar config 
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - ./CIVL/*

test-civl100:
    stage: test
    needs:
        - job: build-civl
          artifacts: false
    before_script:
        - apt-get install -y psmisc
    script:
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | head -100); do python3.8 runner.py -x civl -o bench_civl100.csv -t 300 --job $CI_JOB_ID $file; uptime;killall java||true;done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
test-civl200:
    stage: test
    needs:
        - job: build-civl
          artifacts: false
    before_script:
        - apt-get install -y psmisc
    script:
        - cd Benchmarks
        - for file in $(ls microbenchs/*.c | tail -n +101); do python3.8 runner.py -x civl -o bench_civl200.csv -t 300 --job $CI_JOB_ID $file; uptime;killall java||true;done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/*.csv
            - Benchmarks/*.txt
            
test-civl-medium:
    stage: test
    needs:
        - job: build-civl
          artifacts: false
    script:
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/mediumbenchs/*.c); do python3.8 runner.py -x civl -o bench_civl_med.csv -t 600 $file; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_civl_med.csv
            - Benchmarks/*.txt
            
build-parcoach:
    stage: build
    needs : []
    before_script:
        - apt-get update
        - apt-get install -y git
    script:
        - ln -s $(which clang) /usr/lib/llvm-9/bin/clang
        - if [ -e Parcoach/parcoach/.git ] ; then (cd Parcoach/parcoach ; git pull); else rm -rf Parcoach/parcoach; git clone --depth=1 https://github.com/parcoach/parcoach.git Parcoach/parcoach; fi
        - cd Parcoach/parcoach
        - mkdir -p build
        - cd build
        - cmake .. -DCMAKE_C_COMPILER=clang -DLLVM_DIR=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Parcoach/llvm-project/build
        - make -j$(nproc) VERBOSE=1
        - ctest --output-on-failure
    cache:
        paths:
            - Parcoach/*
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Parcoach/*
            
test-parcoach:
    stage: test
    needs:
        - job: build-parcoach
          artifacts: true
    script:
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/microbenchs/*.c); do python3.8 runner.py -x parcoach -o bench_parcoach.csv -t 300 --job $CI_JOB_ID $file; done    
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_parcoach.csv
            - Benchmarks/*.txt
            
test-parcoach-medium:
    stage: test
    needs:
        - job: build-parcoach
          artifacts: true
    script:
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/mediumbenchs/*.c); do python3.8 runner.py -x parcoach -o bench_parcoach_med.csv -t 600 $file; done    
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_parcoach_med.csv
            - Benchmarks/*.txt
            

build-simgrid:
    stage: build
    needs : []
    before_script:
        - apt-get update
        - apt-get install -y git
    script:
        - if [ -e SimGrid/simgrid/.git ] ; then (cd SimGrid/simgrid ; git pull); else rm -rf SimGrid/simgrid; git clone --depth=1 https://framagit.org/simgrid/simgrid.git SimGrid/simgrid; fi
        - cd SimGrid/simgrid
        - cmake -DCMAKE_INSTALL_PREFIX=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/SimGrid/build -Denable_model-checking=ON .
        - make -j$(nproc) install VERBOSE=1
    cache:
        paths:
            - SimGrid/*
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - SimGrid/*

test-simgrid:
    stage: test
    needs:
        - job: build-simgrid
          artifacts: true
    script:
        - export PATH=$PATH:/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/SimGrid/build/bin/
        - export VERBOSE=1 # Please smpicc, talk to me
        - cp SimGrid/simgrid/examples/platforms/cluster_backbone.xml Benchmarks/cluster.xml
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/microbenchs/*.c); do python3.8 runner.py -x simgrid -o bench_simgrid.csv -t 300 --job $CI_JOB_ID $file; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_simgrid.csv
            - Benchmarks/*.txt
            
test-simgrid-medium:
    stage: test
    needs:
        - job: build-simgrid
          artifacts: true
    script:
        - export PATH=$PATH:/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/SimGrid/build/bin/
        - cp SimGrid/simgrid/examples/platforms/cluster_backbone.xml Benchmarks/cluster.xml
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/mediumbenchs/*.c); do python3.8 runner.py -x simgrid -o bench_simgrid_med.csv -t 600 $file; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_simgrid_med.csv
            - Benchmarks/*.txt
            
build-isp:
    stage: build
    needs : []
    script:
        - cd ISP/isp-0.3.1
        - mkdir -p BUILD 
        - ./configure --prefix=/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/ISP/isp-0.3.1/BUILD --with-mpi-inc-dir=/usr/lib/x86_64-linux-gnu/mpich/include
        - sed -i "s/-source 1.5 -target 1.5 -classpath/-source 1.7 -target 1.7 -classpath/" UI/Makefile*
        - make -j$(nproc) install
    cache:
        paths:
            - ./ISP/*    
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - ./ISP/*    

test-isp:
    stage: test
    needs:
        - job: build-isp
          artifacts: true
    before_script:
        - apt-get update
        - apt-get install -y lsof
    script:
        - export PATH=$PATH:/builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/ISP/isp-0.3.1/BUILD/bin/
        - cd Benchmarks
        - for file in $(ls /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/microbenchs/*.c); do python3.8 runner.py -x isp -o bench_isp.csv -t 300 --job $CI_JOB_ID $file; done
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Benchmarks/bench_isp.csv
            - Benchmarks/*.txt

simgrid-svg:
    stage: svg
    needs:
        - job: test-simgrid
          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cd Data
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_simgrid.csv -o simgrid_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_simgrid.csv -o simgrid_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/simgrid_result_LOG.svg
            - Data/simgrid_result_SRC.svg

parcoach-svg:
    stage: svg
    needs:
        - job: test-parcoach
          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cd Data
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_parcoach.csv -o parcoach_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_parcoach.csv -o parcoach_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/parcoach_result_LOG.svg
            - Data/parcoach_result_SRC.svg
isp-svg:
    stage: svg
    needs:
        - job: test-isp
          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cd Data
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_isp.csv -o isp_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_isp.csv -o isp_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/isp_result_LOG.svg
            - Data/isp_result_SRC.svg

aislinn-svg:
    stage: svg
    needs:
        - job: test-aislinn
          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cd Data
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_aislinn.csv -o aislinn_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/Benchmarks/bench_aislinn.csv -o aislinn_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/aislinn_result_LOG.svg
            - Data/aislinn_result_SRC.svg

civl-svg:
    stage: svg
    needs:
        - job: test-civl100
          artifacts: true
        - job: test-civl200
          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cat ./Benchmarks/*.csv > result.csv
      - cd Data
      - python3.8 gen_svg.py -i ../result.csv -o civl_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i ../result.csv -o civl_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/civl_result_LOG.svg
            - Data/civl_result_SRC.svg

must-svg:
    stage: svg
    needs:
        - job: test-must-25
          artifacts: true
        - job: test-must-50
          artifacts: true
        - job: test-must-75
          artifacts: true
        - job: test-must-100
          artifacts: true
        - job: test-must-125
          artifacts: true
        - job: test-must-150
          artifacts: true
        - job: test-must-175
          artifacts: true
#        - job: test-must-200
#          artifacts: true
    before_script:
      - apt-get update
      - apt-get install -y python3-pip libcairo2
      - pip3 install drawSvg
    script:
      - cat ./Benchmarks/*.csv > result.csv
      - cd Data
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/result.csv -o must_result_LOG --header false --mode log
      - python3.8 gen_svg.py -i /builds/MpiCorrectnessBenchmark/mpicorrectnessbenchmark/result.csv -o must_result_SRC --header false --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - Data/must_result_LOG.svg
            - Data/must_result_SRC.svg
            
data-collect:
    stage: gather
    needs:
        - job: test-must-25
          artifacts: true
        - job: test-must-50
          artifacts: true
        - job: test-must-75
          artifacts: true
        - job: test-must-100
          artifacts: true
        - job: test-must-125
          artifacts: true
        - job: test-must-150
          artifacts: true
        - job: test-must-175
          artifacts: true
#        - job: test-must-200
#          artifacts: true
        - job: test-civl100
          artifacts: true
        - job: test-civl200
          artifacts: true
        - job: test-parcoach
          artifacts: true
        - job: test-simgrid
          artifacts: true
        - job: test-isp
          artifacts: true
        - job: test-aislinn
          artifacts: true
        - job: must-svg
          artifacts: true
        - job: civl-svg
          artifacts: true
        - job: parcoach-svg
          artifacts: true
        - job: simgrid-svg
          artifacts: true
        - job: isp-svg
          artifacts: true
        - job: aislinn-svg
          artifacts: true
    before_script:
        - apt-get update
        - apt-get install -y python3-pip libcairo2
        - pip3 install drawSvg
    script:
        - echo "filename;id;tool;TO;NP;buff;expected;result;jobid" > result.csv
        - cat Benchmarks/*.csv >> result.csv
        - cd Data
        - python3.8 gen_svg.py -i ../result.csv -o all_result_LOG --header true --mode log
        - python3.8 gen_svg.py -i ../result.csv -o all_result_SRC --header true --mode src
    artifacts:
        untracked: false
        expire_in: 30 days
        when: always
        paths:
            - ./result.csv
            - Data/*.svg

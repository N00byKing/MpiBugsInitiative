#! /bin/bash

# Go to the MBI root directory
cd "$(dirname "$0")"/../
rootdir=$(pwd)

# Check that we have the right image
source /etc/os-release
if [ -e /root/mpi-sv/mpisv ]
then 
   echo "This is the docker image of MPI-SV. Good."
else
   echo "Please run this script in a mpisv/mpi-sv image. Run these commands:"
   echo "  docker image pull mpisv/mpi-sv"
   echo "  docker run -it --rm --name MIB --volume $(pwd):/MBI mpisv/mpi-sv /MBI/scripts/mpisv-run"
   exit 1
fi

set -e # Fail on error

# Check that we have the dependencies: our scripts need python 3.6 that is not available without PPA on Ubuntu 14.04
apt-get update
apt-get install -y software-properties-common # First install add-apt-repository
echo|add-apt-repository ppa:deadsnakes/ppa      # Add a source for the python we need
apt-get update
apt-get install -y python3.7

# If this was not run with gilab-ci, we provide a meaningless value
if [ -z "$CI_JOB_ID" ]
then
    CI_JOB_ID=0
fi

test -e ${rootdir}/logs/mpisv || mkdir -p ${rootdir}/logs/mpisv
cd ${rootdir}/logs/mpisv

# Get the list of codes from the command line, if it was provided
if [ $# -eq 0 ] 
then
  codes_list=$(ls ${rootdir}/codes/*.c)
else
  codes_list=$@
fi

# Run the script on each code
python3.7 ${rootdir}/scripts/runner.py -x mpisv -o bench_mpisv.csv -t 300 --job $CI_JOB_ID ${codes_list}

# Remove generated cruft (temp files and compiled binaries)
#find -executable | xargs rm
